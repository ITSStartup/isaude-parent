package br.com.its.isaude.core.modal.domain;

// Generated 09/12/2013 22:31:28 by Hibernate Tools 4.0.0
import br.com.its.isaude.core.json.deserializer.TimeDeserializer;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.codehaus.jackson.annotate.JsonIgnore;
import org.codehaus.jackson.map.annotate.JsonDeserialize;

/**
 * ExpedienteMedico generated by hbm2java
 */
@Entity
@Table(name = "EXPEDIENTE_MEDICO")
public class WorktimeDoctor implements java.io.Serializable {

    private Long id;
    private Doctor medico;
    private MedicalInstitutional instituicaoMedica;
    private String unidade;
    private Integer intervalo;
    private Date horarioInicial;
    private Date horarioFinal;
    private Set<AgendaDoctor> agendaMedicos = new HashSet<AgendaDoctor>();

    public WorktimeDoctor() {
        this.setUnidade("min");
    }

    public WorktimeDoctor(Long id, Doctor medico, MedicalInstitutional instituicaoMedica) {
        this();
        this.id = id;
        this.medico = medico;
        this.instituicaoMedica = instituicaoMedica;
    }

    public WorktimeDoctor(Long id, Doctor medico, MedicalInstitutional instituicaoMedica, String unidade, Integer intervalo, Date horarioInicial, Date horarioFinal, Set<AgendaDoctor> agendaMedicos) {
        this.id = id;
        this.medico = medico;
        this.instituicaoMedica = instituicaoMedica;
        this.unidade = unidade;
        this.intervalo = intervalo;
        this.horarioInicial = horarioInicial;
        this.horarioFinal = horarioFinal;
        this.agendaMedicos = agendaMedicos;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MEDICO_ID", nullable = false)
    public Doctor getMedico() {
        return this.medico;
    }

    public void setMedico(Doctor medico) {
        this.medico = medico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "INSTITUICAO_MEDICA_ID", nullable = false)
    public MedicalInstitutional getInstituicaoMedica() {
        return this.instituicaoMedica;
    }

    public void setInstituicaoMedica(MedicalInstitutional instituicaoMedica) {
        this.instituicaoMedica = instituicaoMedica;
    }

    @Column(name = "UNIDADE", length = 45)
    public String getUnidade() {
        return this.unidade;
    }

    public void setUnidade(String unidade) {
        this.unidade = unidade;
    }

    @Column(name = "INTERVALO")
    public Integer getIntervalo() {
        return this.intervalo;
    }

    public void setIntervalo(Integer intervalo) {
        this.intervalo = intervalo;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "HORARIO_INICIAL", length = 0)
    public Date getHorarioInicial() {
        return this.horarioInicial;
    }

    @JsonDeserialize(using = TimeDeserializer.class)
    public void setHorarioInicial(Date horarioInicial) {
        this.horarioInicial = horarioInicial;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "HORARIO_FINAL", length = 0)
    public Date getHorarioFinal() {
        return this.horarioFinal;
    }

    @JsonDeserialize(using = TimeDeserializer.class)
    public void setHorarioFinal(Date horarioFinal) {
        this.horarioFinal = horarioFinal;
    }

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "expedienteMedico")
    public Set<AgendaDoctor> getAgendaMedicos() {
        return this.agendaMedicos;
    }

    public void setAgendaMedicos(Set<AgendaDoctor> agendaMedicos) {
        this.agendaMedicos = agendaMedicos;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + (this.id != null ? this.id.hashCode() : 0);
        hash = 31 * hash + (this.medico != null ? this.medico.hashCode() : 0);
        hash = 31 * hash + (this.instituicaoMedica != null ? this.instituicaoMedica.hashCode() : 0);
        hash = 31 * hash + (this.unidade != null ? this.unidade.hashCode() : 0);
        hash = 31 * hash + (this.intervalo != null ? this.intervalo.hashCode() : 0);
        hash = 31 * hash + (this.horarioInicial != null ? this.horarioInicial.hashCode() : 0);
        hash = 31 * hash + (this.horarioFinal != null ? this.horarioFinal.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final WorktimeDoctor other = (WorktimeDoctor) obj;
        if (this.id != other.id) {
            return false;
        }
        return true;
    }

}
