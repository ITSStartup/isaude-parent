package br.com.its.isaude.core.modal.domain;

// Generated 21/11/2013 15:00:51 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Paciente generated by hbm2java
 */
@Entity
@Table(name = "PACIENTE")
public class Patient implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -9090794085774318236L;
	private Integer id;
	private String nomeCompleto;
	private String email;
	private String telefone;
	private String celular;
	private Set<AgendaConsultMedicalPatient> agendamentoConsultaMedicaPacientes = new HashSet<AgendaConsultMedicalPatient>();

	public Patient() {
	}

	public Patient(String nomeCompleto, String email, String telefone,	String celular, Set<AgendaConsultMedicalPatient> agendamentoConsultaMedicaPacientes) {
		this.nomeCompleto = nomeCompleto;
		this.email = email;
		this.telefone = telefone;
		this.celular = celular;
		this.agendamentoConsultaMedicaPacientes = agendamentoConsultaMedicaPacientes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "NOME_COMPLETO", length = 45)
	public String getNomeCompleto() {
		return this.nomeCompleto;
	}

	public void setNomeCompleto(String nomeCompleto) {
		this.nomeCompleto = nomeCompleto;
	}

	@Column(name = "EMAIL", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "TELEFONE", length = 45)
	public String getTelefone() {
		return this.telefone;
	}

	public void setTelefone(String telefone) {
		this.telefone = telefone;
	}

	@Column(name = "CELULAR", length = 45)
	public String getCelular() {
		return this.celular;
	}

	public void setCelular(String celular) {
		this.celular = celular;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "paciente")
	public Set<AgendaConsultMedicalPatient> getAgendamentoConsultaMedicaPacientes() {
		return this.agendamentoConsultaMedicaPacientes;
	}

	public void setAgendamentoConsultaMedicaPacientes(
			Set<AgendaConsultMedicalPatient> agendamentoConsultaMedicaPacientes) {
		this.agendamentoConsultaMedicaPacientes = agendamentoConsultaMedicaPacientes;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((celular == null) ? 0 : celular.hashCode());
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result
				+ ((nomeCompleto == null) ? 0 : nomeCompleto.hashCode());
		result = prime * result
				+ ((telefone == null) ? 0 : telefone.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Patient))
			return false;
		Patient other = (Patient) obj;
		if (celular == null) {
			if (other.celular != null)
				return false;
		} else if (!celular.equals(other.celular))
			return false;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (nomeCompleto == null) {
			if (other.nomeCompleto != null)
				return false;
		} else if (!nomeCompleto.equals(other.nomeCompleto))
			return false;
		if (telefone == null) {
			if (other.telefone != null)
				return false;
		} else if (!telefone.equals(other.telefone))
			return false;
		return true;
	}

}
