package br.com.its.isaude.core.modal.domain;

// Generated 09/12/2013 22:31:28 by Hibernate Tools 4.0.0
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Paciente generated by hbm2java
 */
@Entity
@Table(name = "PACIENTE", uniqueConstraints = @UniqueConstraint(columnNames = "EMAIL"))
public class Patiente implements java.io.Serializable {

    private Long id;
    private String nomeCompleto;
    private String email;
    private String telefone;
    private String celular;
    private Set<AgendaConsultMedicalPatient> agendamentoConsultaMedicaPacientes = new HashSet<AgendaConsultMedicalPatient>();

    public Patiente() {
    }

    public Patiente(String nomeCompleto, String email, String telefone, String celular) {
        this.nomeCompleto = nomeCompleto;
        this.email = email;
        this.telefone = telefone;
        this.celular = celular;
    }

    public Patiente(String nomeCompleto, String email, String telefone, String celular, Set<AgendaConsultMedicalPatient> agendamentoConsultaMedicaPacientes) {
        this.nomeCompleto = nomeCompleto;
        this.email = email;
        this.telefone = telefone;
        this.celular = celular;
        this.agendamentoConsultaMedicaPacientes = agendamentoConsultaMedicaPacientes;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "NOME_COMPLETO", nullable = false, length = 45)
    public String getNomeCompleto() {
        return this.nomeCompleto;
    }

    public void setNomeCompleto(String nomeCompleto) {
        this.nomeCompleto = nomeCompleto;
    }

    @Column(name = "EMAIL", unique = true, nullable = false, length = 45)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "TELEFONE", nullable = false, length = 45)
    public String getTelefone() {
        return this.telefone;
    }

    public void setTelefone(String telefone) {
        this.telefone = telefone;
    }

    @Column(name = "CELULAR", nullable = false, length = 45)
    public String getCelular() {
        return this.celular;
    }

    public void setCelular(String celular) {
        this.celular = celular;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "paciente")
    public Set<AgendaConsultMedicalPatient> getAgendamentoConsultaMedicaPacientes() {
        return this.agendamentoConsultaMedicaPacientes;
    }

    public void setAgendamentoConsultaMedicaPacientes(Set<AgendaConsultMedicalPatient> agendamentoConsultaMedicaPacientes) {
        this.agendamentoConsultaMedicaPacientes = agendamentoConsultaMedicaPacientes;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 79 * hash + (this.id != null ? this.id.hashCode() : 0);
        hash = 79 * hash + (this.nomeCompleto != null ? this.nomeCompleto.hashCode() : 0);
        hash = 79 * hash + (this.email != null ? this.email.hashCode() : 0);
        hash = 79 * hash + (this.telefone != null ? this.telefone.hashCode() : 0);
        hash = 79 * hash + (this.celular != null ? this.celular.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Patiente other = (Patiente) obj;
        if (this.id != other.id && (this.id == null || !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

}