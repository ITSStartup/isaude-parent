package br.com.itsisaude.core.model.domain.generated;

// Generated 09/12/2013 22:31:28 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Medico generated by hbm2java
 */
@Entity
@Table(name = "medico", catalog = "camilo_itsisaude", uniqueConstraints = {
		@UniqueConstraint(columnNames = "EMAIL"),
		@UniqueConstraint(columnNames = "CRM") })
public class Medico implements java.io.Serializable {

	private Integer id;
	private String nome;
	private String sobrenome;
	private String email;
	private String curriculo;
	private String telefone;
	private String crm;
	private Set especialidadeMedicas = new HashSet(0);
	private Set expedienteMedicos = new HashSet(0);
	private Set instituicaoMedicas = new HashSet(0);

	public Medico() {
	}

	public Medico(String nome, String sobrenome, String email, String telefone,
			String crm) {
		this.nome = nome;
		this.sobrenome = sobrenome;
		this.email = email;
		this.telefone = telefone;
		this.crm = crm;
	}

	public Medico(String nome, String sobrenome, String email,
			String curriculo, String telefone, String crm,
			Set especialidadeMedicas, Set expedienteMedicos,
			Set instituicaoMedicas) {
		this.nome = nome;
		this.sobrenome = sobrenome;
		this.email = email;
		this.curriculo = curriculo;
		this.telefone = telefone;
		this.crm = crm;
		this.especialidadeMedicas = especialidadeMedicas;
		this.expedienteMedicos = expedienteMedicos;
		this.instituicaoMedicas = instituicaoMedicas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "NOME", nullable = false, length = 45)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "SOBRENOME", nullable = false, length = 45)
	public String getSobrenome() {
		return this.sobrenome;
	}

	public void setSobrenome(String sobrenome) {
		this.sobrenome = sobrenome;
	}

	@Column(name = "EMAIL", unique = true, nullable = false, length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "CURRICULO", length = 65535)
	public String getCurriculo() {
		return this.curriculo;
	}

	public void setCurriculo(String curriculo) {
		this.curriculo = curriculo;
	}

	@Column(name = "TELEFONE", nullable = false, length = 45)
	public String getTelefone() {
		return this.telefone;
	}

	public void setTelefone(String telefone) {
		this.telefone = telefone;
	}

	@Column(name = "CRM", unique = true, nullable = false, length = 45)
	public String getCrm() {
		return this.crm;
	}

	public void setCrm(String crm) {
		this.crm = crm;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "medico_has_especialidade_medica", catalog = "camilo_itsisaude", joinColumns = { @JoinColumn(name = "MEDICO_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ESPECIALIDADE_MEDICA_ID", nullable = false, updatable = false) })
	public Set getEspecialidadeMedicas() {
		return this.especialidadeMedicas;
	}

	public void setEspecialidadeMedicas(Set especialidadeMedicas) {
		this.especialidadeMedicas = especialidadeMedicas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "medico")
	public Set getExpedienteMedicos() {
		return this.expedienteMedicos;
	}

	public void setExpedienteMedicos(Set expedienteMedicos) {
		this.expedienteMedicos = expedienteMedicos;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "instituicao_medica_has_medico", catalog = "camilo_itsisaude", joinColumns = { @JoinColumn(name = "MEDICO_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "INSTITUICAO_MEDICA_ID", nullable = false, updatable = false) })
	public Set getInstituicaoMedicas() {
		return this.instituicaoMedicas;
	}

	public void setInstituicaoMedicas(Set instituicaoMedicas) {
		this.instituicaoMedicas = instituicaoMedicas;
	}

}
