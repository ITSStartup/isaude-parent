package br.com.itsisaude.core.model.domain.generated;

// Generated 08/12/2013 12:06:24 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Doctor generated by hbm2java
 */
@Entity
@Table(name = "doctor", catalog = "camilo_itsisaude", uniqueConstraints = {
		@UniqueConstraint(columnNames = "EMAIL"),
		@UniqueConstraint(columnNames = "CRM") })
public class Doctor implements java.io.Serializable {

	private Integer id;
	private String nome;
	private String sobrenome;
	private String email;
	private String curriculo;
	private String telefone;
	private String crm;
	private Set worktimeDoctors = new HashSet(0);
	private Set medicalSpecialities = new HashSet(0);
	private Set medicalInstitutionals = new HashSet(0);

	public Doctor() {
	}

	public Doctor(String nome, String sobrenome, String email, String telefone,
			String crm) {
		this.nome = nome;
		this.sobrenome = sobrenome;
		this.email = email;
		this.telefone = telefone;
		this.crm = crm;
	}

	public Doctor(String nome, String sobrenome, String email,
			String curriculo, String telefone, String crm, Set worktimeDoctors,
			Set medicalSpecialities, Set medicalInstitutionals) {
		this.nome = nome;
		this.sobrenome = sobrenome;
		this.email = email;
		this.curriculo = curriculo;
		this.telefone = telefone;
		this.crm = crm;
		this.worktimeDoctors = worktimeDoctors;
		this.medicalSpecialities = medicalSpecialities;
		this.medicalInstitutionals = medicalInstitutionals;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "NOME", nullable = false, length = 45)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "SOBRENOME", nullable = false, length = 45)
	public String getSobrenome() {
		return this.sobrenome;
	}

	public void setSobrenome(String sobrenome) {
		this.sobrenome = sobrenome;
	}

	@Column(name = "EMAIL", unique = true, nullable = false, length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "CURRICULO", length = 65535)
	public String getCurriculo() {
		return this.curriculo;
	}

	public void setCurriculo(String curriculo) {
		this.curriculo = curriculo;
	}

	@Column(name = "TELEFONE", nullable = false, length = 45)
	public String getTelefone() {
		return this.telefone;
	}

	public void setTelefone(String telefone) {
		this.telefone = telefone;
	}

	@Column(name = "CRM", unique = true, nullable = false, length = 45)
	public String getCrm() {
		return this.crm;
	}

	public void setCrm(String crm) {
		this.crm = crm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "doctor")
	public Set getWorktimeDoctors() {
		return this.worktimeDoctors;
	}

	public void setWorktimeDoctors(Set worktimeDoctors) {
		this.worktimeDoctors = worktimeDoctors;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "doctor_has_medical_speciality", catalog = "camilo_itsisaude", joinColumns = { @JoinColumn(name = "MEDICO_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ESPECIALIDADE_MEDICA_ID", nullable = false, updatable = false) })
	public Set getMedicalSpecialities() {
		return this.medicalSpecialities;
	}

	public void setMedicalSpecialities(Set medicalSpecialities) {
		this.medicalSpecialities = medicalSpecialities;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "medical_institutional_has_doctor", catalog = "camilo_itsisaude", joinColumns = { @JoinColumn(name = "MEDICO_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "INSTITUICAO_MEDICA_ID", nullable = false, updatable = false) })
	public Set getMedicalInstitutionals() {
		return this.medicalInstitutionals;
	}

	public void setMedicalInstitutionals(Set medicalInstitutionals) {
		this.medicalInstitutionals = medicalInstitutionals;
	}

}
